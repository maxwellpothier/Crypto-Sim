{"ast":null,"code":"var _jsxFileName = \"/Users/maxpothier/Desktop/react-projects/crypto-sim/src/InputRow.js\";\nimport React from 'react';\nimport Register from './Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputRow = props => {\n  // Creating a unique id name for each field\n  var idName = props.prompt;\n  idName = idName.toLowerCase();\n\n  for (var i = 0, n = idName.length; i < n; i++) {\n    if (!idName.charAt(i).match(/[a-z]/i)) {\n      idName = idName.replace(idName.charAt(i), '');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: props.prompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: idName,\n      type: \"text\",\n      onChange: this.handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 74\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = InputRow;\nexport default InputRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputRow\");","map":{"version":3,"sources":["/Users/maxpothier/Desktop/react-projects/crypto-sim/src/InputRow.js"],"names":["React","Register","InputRow","props","idName","prompt","toLowerCase","i","n","length","charAt","match","replace","handleInputChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAIA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB;AACA,MAAIC,MAAM,GAAGD,KAAK,CAACE,MAAnB;AACAD,EAAAA,MAAM,GAAGA,MAAM,CAACE,WAAP,EAAT;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCF,CAAC,GAAGC,CAAvC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,QAAI,CAAEH,MAAM,CAACM,MAAP,CAAcH,CAAd,EAAiBI,KAAjB,CAAuB,QAAvB,CAAN,EAAyC;AACvCP,MAAAA,MAAM,GAAGA,MAAM,CAACQ,OAAP,CAAeR,MAAM,CAACM,MAAP,CAAcH,CAAd,CAAf,EAAiC,EAAjC,CAAT;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,gBAAQJ,KAAK,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,EAAE,EAAED,MAAX;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,QAAQ,EAAE,KAAKS;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFF,eAEqE;AAAA;AAAA;AAAA;AAAA,YAFrE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhBD;;KAAMX,Q;AAkBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport Register from './Register';\n\n\n\nconst InputRow = props => {\n  // Creating a unique id name for each field\n  var idName = props.prompt;\n  idName = idName.toLowerCase();\n  for (var i = 0, n = idName.length; i < n; i++) {\n    if (!(idName.charAt(i).match(/[a-z]/i))) {\n      idName = idName.replace(idName.charAt(i), '');\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <label>{props.prompt}</label>\n      <input id={idName} type=\"text\" onChange={this.handleInputChange} /><br />\n    </div>\n  );\n};\n\nexport default InputRow;\n"]},"metadata":{},"sourceType":"module"}