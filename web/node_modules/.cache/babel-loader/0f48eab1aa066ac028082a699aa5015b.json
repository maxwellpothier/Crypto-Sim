{"ast":null,"code":"var _jsxFileName = \"/Users/maxpothier/Desktop/react-projects/crypto-sim/web/src/components/PriceList.js\";\nimport React from 'react';\nimport coingecko from '../api/coingecko';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PriceList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      names: [],\n      currPrice: []\n    };\n\n    this.loadAPI = async () => {\n      const res = await coingecko.get('?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false');\n      this.populateState(res);\n    };\n  }\n\n  componentDidMount() {\n    this.loadAPI();\n  }\n\n  populateState(res) {\n    const coins = res.data.map(coin => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: coin.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    });\n    const prices = res.data.map(price => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: price.current_price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    });\n    this.setState({\n      currPrice: prices\n    });\n    this.setState({\n      names: coins\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Price List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [this.state.names[0], \" \", this.state.currPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PriceList;","map":{"version":3,"sources":["/Users/maxpothier/Desktop/react-projects/crypto-sim/web/src/components/PriceList.js"],"names":["React","coingecko","PriceList","Component","state","names","currPrice","loadAPI","res","get","populateState","componentDidMount","coins","data","map","coin","name","prices","price","current_price","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,SAAS,EAAE;AAFL,KAD8B;;AAAA,SAUtCC,OAVsC,GAU5B,YAAY;AACpB,YAAMC,GAAG,GAAG,MAAMP,SAAS,CAACQ,GAAV,CAAc,2EAAd,CAAlB;AACA,WAAKC,aAAL,CAAmBF,GAAnB;AACD,KAbqC;AAAA;;AAMtCG,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,OAAL;AACD;;AAODG,EAAAA,aAAa,CAACF,GAAD,EAAM;AACjB,UAAMI,KAAK,GAAGJ,GAAG,CAACK,IAAJ,CAASC,GAAT,CAAcC,IAAD,IAAU;AACnC,0BAAO;AAAA,kBAAMA,IAAI,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFa,CAAd;AAIA,UAAMC,MAAM,GAAGT,GAAG,CAACK,IAAJ,CAASC,GAAT,CAAcI,KAAD,IAAW;AACrC,0BAAO;AAAA,kBAAMA,KAAK,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFc,CAAf;AAIA,SAAKC,QAAL,CAAc;AAAEd,MAAAA,SAAS,EAAEW;AAAb,KAAd;AACA,SAAKG,QAAL,CAAc;AAAEf,MAAAA,KAAK,EAAEO;AAAT,KAAd;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAAO,KAAKjB,KAAL,CAAWC,KAAX,CAAiB,CAAjB,CAAP,OAA6B,KAAKD,KAAL,CAAWE,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAnCqC;;AAsCxC,eAAeJ,SAAf","sourcesContent":["import React from 'react';\nimport coingecko from '../api/coingecko';\n\nclass PriceList extends React.Component {\n  state = {\n    names: [],\n    currPrice: []\n  };\n\n  componentDidMount() {\n    this.loadAPI();\n  }\n\n  loadAPI = async () => {\n    const res = await coingecko.get('?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false');\n    this.populateState(res);\n  }\n\n  populateState(res) {\n    const coins = res.data.map((coin) => {\n      return <div>{coin.name}</div>\n    });\n\n    const prices = res.data.map((price) => {\n      return <div>{price.current_price}</div>\n    });\n\n    this.setState({ currPrice: prices });\n    this.setState({ names: coins });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Price List</h3>\n        <span>{this.state.names[0]} {this.state.currPrice}</span>\n      </div>\n    );\n  }\n}\n\nexport default PriceList;"]},"metadata":{},"sourceType":"module"}